#include "stm32f4xx.h"
#include "adc.h"

#define GPIOAEN		    (1U<<0)
#define ADC1EN			(1U<<8)
#define ADC_CH1			(1U<<0)
#define ADC_SEQ_LEN_1	 0x00
#define CR2_AD0N		(1U<<0)
#define CR2_SWSTART		(1U<<30)
#define SR_EOC			(1U<<1)



void pa1_adc_init(void)
{
	/***Configure the ADC GPIO pin ***/

	/*Enable clock access to GPIOA*/
	/*Set the mode of PA1 to analog*/
	
	/***Configure the ADC module***/
	/*Enable clock access to ADC */
	/*Conversion sequence start*/
	/*Conversion sequence length*/
	/*Enable ADC module*/
}


void start_converstion(void)
{
	/*Start adc conversion*/
	ADC1->CR2 |= CR2_SWSTART;
}



uint32_t adc_read(void)
{
	/*Wait for conversion to be complete*/
	while(!(ADC1->SR & SR_EOC)){}

	/*Read converted result*/
	return (ADC1->DR);
}
